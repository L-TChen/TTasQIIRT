\documentclass[sigplan,10pt,anonymous,review]{acmart}\settopmatter{printfolios=true,printccs=false,printacmref=false}
\setcopyright{acmlicensed}
\copyrightyear{2025}
\acmYear{2025}
\acmDOI{XXXXXXX.XXXXXXX}
\acmConference[Conference acronym 'XX]{Make sure to enter the correct
  conference title from your rights confirmation email}{June 03--05,
  2018}{Woodstock, NY}
%%
%%  Uncomment \acmBooktitle if the title of the proceedings is different
%%  from ``Proceedings of ...''!
%%
%%\acmBooktitle{Woodstock '18: ACM Symposium on Neural Gaze Detection,
%%  June 03--05, 2018, Woodstock, NY}
\acmISBN{978-1-4503-XXXX-X/2018/06}

%%% Packages %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\usepackage[utf8]{inputenc}
\usepackage{newunicodechar}
\usepackage{xspace}
\usepackage{xcolor}
\usepackage{mathtools}
\let\Bbbk\relax
\usepackage{amsmath,amssymb,mathbbol}
\let\Bbbk\relax
\usepackage{bbold}

%% Remove the following if there are no todo items.
\setlength {\marginparwidth }{2cm}
\usepackage[obeyFinal,textsize=footnotesize]{todonotes}
\usepackage{cleveref}
\newcommand{\LT}[2][]{\todo[inline,author={L-T},caption={},color={pink},#1]{#2}}
\newcommand{\Fredrik}[2][]{\todo[inline,author={Fred},caption={},#1]{#2}}

\usepackage{microtype}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% Macros %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newcommand{\CA}{\textsc{Cubical Agda}\xspace}
\newcommand{\Agda}{\textsc{Agda}\xspace}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\usepackage{newunicodechar}

%%% lhs2tex %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newcommand{\cons}[1]{\mathbf{#1}}
\newcommand{\iden}{\mathit}

\newcommand{\awa}[2]{\mathrlap{#2}\phantom{#1}} % as wide as

\definecolor{addition}{RGB}{204,255,216}
\newcommand{\highlight}[2]{\smash{\text{\colorbox{#1}{\kern-.1em\vphantom{\vrule height 1.2ex depth 0.1ex}\smash{\ensuremath{#2}}\kern-.1em}}}}

%include agda.fmt

%% end of the preamble, start of the body of the document source.

\begin{document}

%%
%% The "title" command has an optional parameter,
%% allowing the author to define a "short title" to be used in page headers.
\title{Can natural models simplify the metatheory of type theory in Cubical Agda?}

%%
%% The "author" command and its associated commands are used to define
%% the authors and their affiliations.
%% Of note is the shared affiliation of the first two authors, and the
%% "authornote" and "authornotemark" commands
%% used to denote shared contribution to the research.
\author{Liang-Ting Chen}
\affiliation{%
  \institution{Institute of Information Science, Academia Sinica}
  \city{Taipei}
  \country{Taiwan}}
\email{liangtingchen@@as.edu.tw}

\author{Fredrik Nordvall Forsberg}
\affiliation{%
  \institution{Department of Computer and Information Sciences, University of Strathclyde}
  \city{Glasgow}
  \country{United Kingdom}}

\author{Tzu-Chun Tsai}
\affiliation{%
  \institution{Institute of Information Science, Academia Sinica}
  \city{Taipei}
  \country{Taiwan}}
%\affiliation{%
%  \institution{Institute for Logic, Language and Computation, University of Amsterdam}
%  \city{Amsterdam}
%  \country{Netherlands}}

%%
%% By default, the full list of authors will be used in the page
%% headers. Often, this list is too long, and will overlap
%% other information printed in the page headers. This command allows
%% the author to define a more concise list
%% of authors' names for this purpose.
%\renewcommand{\shortauthors}{Trovato et al.}

%%
%% The abstract is a short summary of the work to be presented in the
%% article.
\begin{abstract}

  We report a folklore approach to formalising type theory in type theory, using Awodey's \emph{natural model} of type theory.
  The initial natural model is represented as strictly positive quotient inductive-inductive-recursive types in the proof assistant \CA, leading us to a syntax without any `transport hell'.
We formalise some meta-properties such as the standard % and logical predicate
interpretation, normalisation by evaluation for typed terms, and strictification constructions.
Since our formalisation is carried out using \CA's built-in support for quotient inductive types, all our constructions compute.
However, the transport hell reappears when developing more sophisticated metatheory.
Hence it is still a considerable struggle to develop the metatheory of type theory using intrinsic representation in a metatheory without strict proposition and strictification (or custom rewrite rules), and the effort is about the same using natural models or not.
\end{abstract}

%% The code below is generated by the tool at http://dl.acm.org/ccs.cfm.
%% Please copy and paste the code instead of the example below.
\begin{CCSXML}
<ccs2012>
   <concept>
       <concept_id>10003752.10003790.10011740</concept_id>
       <concept_desc>Theory of computation~Type theory</concept_desc>
       <concept_significance>500</concept_significance>
       </concept>
 </ccs2012>
\end{CCSXML}

\ccsdesc[500]{Theory of computation~Type theory}

\keywords{Proof Assistants, Formalisation, Cubical Agda, Quotient Inductive-Inductive-Recursive Type}
%% A "teaser" image appears between the author and affiliation
%% information and the body of the document, and typically spans the
%% page.

%\received{20 February 2007}
%\received[revised]{12 March 2009}
%\received[accepted]{5 June 2009}

\maketitle
\bibliographystyle{ACM-Reference-Format}

\section{Introduction}
% FNF (Fri 5 Sep)

Transport hell = transports appear inside terms that you actually want to study, hence you need to do a lot of reasoning about transport rather than the actual objects of interest.

\LT{I think the main contribution of our work is an attempt to formalise type theory as a strictly positive QIT and in a metatheory without strict prop; this definition could be used in conjunction with stratification in other setting (such as OTT) with a proper QIT support.}
\LT{the idea of using natural model appears at least in 2024 \cite{Bense2024}, and it is a natural idea to formalise type theory in this way.}
\section{Setting and metatheory}
% FNF (Sun 7 Sep)

Cubical Agda with UIP

QIIRTs

\section{Type theory as a natural model}
\subsection{Natural models}

\subsection{Syntax of Type Theory as a Quotient Inductive-Inductive-Recursive Type}
\begin{code}

data Ctx  :  Set
data Sub  :  (Γ Δ : Ctx) → Set
data Ty   :  Ctx → Set
data Tm   :  (Γ : Ctx) → Set

tyOf
  : ∀ {Γ} → Tm Γ → Ty Γ

module Var where
  variable
    Γ Δ Θ Ξ : Ctx
    A B C D : Ty Γ
    t u   : Tm Γ
    σ τ γ δ : Sub Γ Δ
open Var

-- Substitution calculus
∅ : Ctx
_,_ : (Γ : Ctx)(A : Ty Γ) → Ctx
_[_]T : (A : Ty Δ)(σ : Sub Γ Δ) → Ty Γ
_[_]t : (A : Tm Δ)(σ : Sub Γ Δ) → Tm Γ
∅S : Sub Γ ∅
_,_∶[_] : (σ : Sub Γ Δ) (t : Tm Γ) → tyOf t ≡ A [ σ ]T → Sub Γ (Δ , A)
idS : Sub Γ Γ
_∘_ : Sub Δ Θ → Sub Γ Δ → Sub Γ Θ
π₁ : Sub Γ (Δ , A) → Sub Γ Δ
π₂ : Sub Γ (Δ , A) → Tm Γ
\end{code}

\subsection{Recursion and Elimination Principles}

\subsection{Strictification}

\subsection{Some workarounds}  \label{sec:tt:workaround}
\section{Metatheory}
% LTC (Tue 9 Sep)
% \input{meta.agda.tex}



\section{Comparison with other approaches}
% FNF (Tue 9 Sep)

Compared to QIIT:

\begin{itemize}
\item Fewer transports in the syntax, but they tend to come back in concrete models
\item Strictification orthogonal

Even the strictification technique~\cite{Kaposi2025}, which turn most of equality constructors about substitution to strict equalities, cannot help, as it can only be applied \emph{after} the inductive types are defined.
\end{itemize}

Compared to untyped version:
\begin{itemize}
\item Untyped version might still be easiest to work with, with current proof assistant technology
\end{itemize}

\section{Discussion}
% LTC (at first)

Practical considerations (eg NBE computes, support for interleaved mutual definitions)

Safety guarantees from proof assistant (e.g. strict positivity check, termination check, coverage check)

Easier in OTT-based proof assistant

\IfFileExists{./reference.bib}{\bibliography{reference}}{\bibliography{ref}}
%\bibliography{ref}

\end{document}


%\begin{acks}
%To Robert, for the bagels and explaining CMYK and color spaces.
%\end{acks}
