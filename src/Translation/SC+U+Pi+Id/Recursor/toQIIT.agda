open import Prelude

module Translation.SC+U+Pi+Id.Recursor.toQIIT where

open import Theory.SC+U+Pi+Id.QIIRT.Syntax
open import Theory.SC+U+Pi+Id.QIIRT.Properties
open import Theory.SC+U+Pi+Id.QIIRT.Recursion

import Theory.SC+U+Pi+Id.QIIT.Syntax as I
import Theory.SC+U+Pi+Id.QIIT.Recursion as I

module _  {‚Ñì ‚Ñì‚Ä≤}(rec : Recursor {‚Ñì} {‚Ñì‚Ä≤}) where
  open Recursor rec
  toQIIT : I.Recursor {‚Ñì} {‚Ñì‚Ä≤}
  toQIIT .I.Recursor.mot = record
    { Ctx·¥π = Ctx·¥π
    ; Ty·¥π  = Ty·¥π
    ; Sub·¥π = Sub·¥π
    ; Tm·¥π  = Tm·¥π
    }
  toQIIT .I.Recursor.met = record
    { ùíû = record
      { [_]·¥π_   = [_]·¥π_
      ; ‚àÖ·∂ú·¥π     = ‚àÖ·∂ú·¥π
      ; _,·∂ú·¥π_   = _,·∂ú·¥π_
      ; ‚àÖÀ¢·¥π     = ‚àÖÀ¢·¥π
      ; _,À¢·¥π_   = _,À¢·¥π_
      ; idS·¥π    = idS·¥π
      ; _‚®ü·¥π_    = _‚®ü·¥π_
      ; œÄ‚ÇÅ·¥π     = œÄ‚ÇÅ·¥π
      ; [idS]·¥π  = [idS]·¥π
      ; [‚®ü]·¥π    = [‚®ü]·¥π
      ; œÄ‚ÇÇ·¥π     = œÄ‚ÇÇ·¥π
      ; [_]tm·¥π_ = [_]tm·¥π_
      ; _‚®üidS·¥π   = _‚®üidS·¥π
      ; idS‚®ü·¥π_   = idS‚®ü·¥π_
      ; ‚®ü-assoc·¥π = ‚®ü-assoc·¥π
      ; œÄ‚ÇÅ,·¥π     = œÄ‚ÇÅ,·¥π
      ; ‚®ü,·¥π      = ‚®ü,·¥π
      ; Œ∑‚àÖ·¥π      = Œ∑‚àÖ·¥π
      ; Œ∑,·¥π      = Œ∑,·¥π
      ; [idS]tm·¥π = [idS]tm·¥π
      ; [‚®ü]tm·¥π   = [‚®ü]tm·¥π
      ; œÄ‚ÇÇ,·¥π     = Œª {Œî·¥π} {_} {Œì·¥π} {A·¥π} {œÉ·¥π} {t·¥π}
                  ‚Üí tr-cong {P = Tm·¥π Œì·¥π} œÄ‚ÇÅ,·¥π
                  ‚àô cong (Œª p ‚Üí tr (Tm·¥π Œì·¥π) p (œÄ‚ÇÇ·¥π (œÉ·¥π ,À¢·¥π t·¥π))) (uip _ _)
                  ‚àô œÄ‚ÇÇ,·¥π
      }
    ; univ = record 
      { U·¥π      = U·¥π
      ; El·¥π     = El·¥π
      ; Lift·¥π   = Lift·¥π
      ; c·¥π      = c·¥π
      ; mk·¥π     = mk·¥π
      ; un·¥π     = un·¥π
      ; []U·¥π    = []U·¥π
      ; []El·¥π   = {! []El·¥π   !} 
      ; []Lift·¥π = []Lift·¥π
      ; []tc·¥π   = []tc·¥π
      ; []mk·¥π   = {!  []mk·¥π !}
      ; []un·¥π   = []un·¥π
      ; UŒ≤·¥π     = UŒ≤·¥π
      ; UŒ∑·¥π     = UŒ∑·¥π
      ; LiftŒ≤·¥π  = LiftŒ≤·¥π
      ; LiftŒ∑·¥π  = LiftŒ∑·¥π
      }
    ; piTy = record
      { Œ†·¥π   = Œ†·¥π
      ; ∆õ·¥π_  = ∆õ·¥π_
      ; app·¥π = app·¥π
      ; []Œ†·¥π = {!   !} -- []Œ†·¥π
      ; []∆õ·¥π = {!   !} -- []∆õ·¥π
      ; Œ†Œ≤·¥π  = Œ†Œ≤·¥π
      ; Œ†Œ∑·¥π  = Œ†Œ∑·¥π
      }
    ; idTy = record
      { Id·¥π      = Id·¥π
      ; []Id·¥π    = {!   !} -- []Id·¥π
      ; refl·¥π    = refl·¥π
      ; []refl·¥π  = {!   !} -- []refl·¥π
      ; reflect·¥π = reflect·¥π
      }
    }