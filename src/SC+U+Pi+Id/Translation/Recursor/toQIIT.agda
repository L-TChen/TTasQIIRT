open import Prelude

module SC+U+Pi+Id.Translation.Recursor.toQIIT where

open import SC+U+Pi+Id.QIIRT.Syntax
open import SC+U+Pi+Id.QIIRT.Properties
open import SC+U+Pi+Id.QIIRT.Recursion

import SC+U+Pi+Id.QIIT.Syntax as I
import SC+U+Pi+Id.QIIT.Recursion as I

module _  {‚Ñì ‚Ñì‚Ä≤}(rec : Recursor {‚Ñì} {‚Ñì‚Ä≤}) where
  open Recursor rec
  toQIIT : I.Recursor {‚Ñì} {‚Ñì‚Ä≤}
  toQIIT .I.Recursor.mot = record
    { Ctx·¥π = Ctx·¥π
    ; Ty·¥π  = Ty·¥π
    ; Sub·¥π = Sub·¥π
    ; Tm·¥π  = Tm·¥π
    }
  toQIIT .I.Recursor.met = record
    { ùíû = record
      { C‚ÇÅ = record
        { [_]·¥π_ = [_]·¥π_
        ; ‚àÖ·∂ú·¥π = ‚àÖ·∂ú·¥π
        ; _,·∂ú·¥π_ = _,·∂ú·¥π_
        ; ‚àÖÀ¢·¥π = ‚àÖÀ¢·¥π
        ; _,À¢·¥π_ = _,À¢·¥π_
        ; idS·¥π = idS·¥π
        ; _‚®ü·¥π_ = _‚®ü·¥π_
        ; œÄ‚ÇÅ·¥π = œÄ‚ÇÅ·¥π
        ; [idS·¥π] = [idS·¥π]
        ; [‚®ü·¥π]·¥π = [‚®ü·¥π]·¥π
        ; œÄ‚ÇÇ·¥π = œÄ‚ÇÇ·¥π
        ; [_]tm·¥π_ = [_]tm·¥π_
        }
      ; C‚ÇÇ = record
        { _‚®ü·¥πidS·¥π = _‚®ü·¥πidS·¥π
        ; idS·¥π‚®ü·¥π_ = idS·¥π‚®ü·¥π_
        ; ‚®ü·¥π-assoc = ‚®ü·¥π-assoc
        ; œÄ‚ÇÅ·¥π,À¢·¥π = œÄ‚ÇÅ·¥π,À¢·¥π
        ; ‚®ü·¥π,À¢·¥π = ‚®ü·¥π,À¢·¥π -- ‚®ü·¥π,À¢·¥π
        ; Œ∑‚àÖÀ¢·¥π = Œ∑‚àÖÀ¢·¥π
        ; Œ∑,À¢·¥π = Œ∑,À¢·¥π
        ; [idS·¥π]tm·¥π = [idS·¥π]tm·¥π
        ; [‚®ü·¥π]tm·¥π = [‚®ü·¥π]tm·¥π
        ; œÄ‚ÇÇ·¥π,À¢·¥π = Œª {Œî·¥π} {_} {Œì·¥π} {A·¥π} {œÉ·¥π} {t·¥π}
                 ‚Üí tr-cong {P = Tm·¥π Œì·¥π} œÄ‚ÇÅ·¥π,À¢·¥π
                 ‚àô cong (Œª p ‚Üí tr (Tm·¥π Œì·¥π) p (œÄ‚ÇÇ·¥π (œÉ·¥π ,À¢·¥π t·¥π))) (uip _ _)
                 ‚àô œÄ‚ÇÇ·¥π,À¢·¥π
        }
      }
    ; univ = record 
      { U·¥π = U·¥π
      ; El·¥π = El·¥π
      ; Lift·¥π = Lift·¥π
      ; c·¥π = c·¥π
      ; mk·¥π = mk·¥π
      ; un·¥π = un·¥π
      ; []·¥πU·¥π = []·¥πU·¥π
      ; []·¥πEl·¥π = {! []·¥πEl·¥π   !} -- []·¥πEl·¥π
      ; []·¥πLift·¥π = []·¥πLift·¥π
      ; []t·¥πc·¥π = []t·¥πc·¥π
      ; []mk·¥π = {!  []mk·¥π !} -- []mk·¥π
      ; []un·¥π = []un·¥π
      ; U·¥πŒ≤ = U·¥πŒ≤
      ; U·¥πŒ∑ = U·¥πŒ∑
      ; Lift·¥πŒ≤ = Lift·¥πŒ≤
      ; Lift·¥πŒ∑ = Lift·¥πŒ∑
      }
    ; piTy = record
      { Œ†·¥π = Œ†·¥π
      ; ∆õ·¥π_ = ∆õ·¥π_
      ; app·¥π = app·¥π
      ; []·¥πŒ†·¥π = {!   !} -- []·¥πŒ†·¥π
      ; []∆õ·¥π = {!   !} -- []∆õ·¥π
      ; Œ†Œ≤·¥π = Œ†Œ≤·¥π
      ; Œ†Œ∑·¥π = Œ†Œ∑·¥π
      }
    ; idTy = record
      { Id·¥π = Id·¥π
      ; []·¥πId·¥π = {!   !} -- []·¥πId·¥π
      ; refl·¥π = refl·¥π
      ; []refl·¥π = {!   !} -- []refl·¥π
      ; reflect·¥π = reflect·¥π
      }
    }