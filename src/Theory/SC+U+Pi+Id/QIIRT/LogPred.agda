open import Prelude

module Theory.SC+U+Pi+Id.QIIRT.LogPred where

open import Theory.SC+U+Pi+Id.QIIRT.Syntax
open import Theory.SC+U+Pi+Id.QIIRT.Properties
open import Theory.SC+U+Pi+Id.QIIRT.Elimination
open Eliminator

record Ctxแต (ฮ : Ctx) : Set where
  field
    ctxแต : Ctx
    wkแต : Sub ctxแต ฮ
open Ctxแต

Tyแต : Ctxแต ฮ โ (i : โ) โ Ty ฮ i โ Set
Tyแต ฮแต i A = Ty (ctxแต ฮแต , [ wkแต ฮแต ] A) i

record Subแต {ฮ ฮ : Ctx}(ฮแต : Ctxแต ฮ)(ฮแต : Ctxแต ฮ)(ฯ : Sub ฮ ฮ) : Set where
  field
    subแต : Sub (ctxแต ฮแต) (ctxแต ฮแต)
    wkแตnat : subแต โจ wkแต ฮแต โก wkแต ฮแต โจ ฯ
open Subแต

Tmแต : {A : Ty ฮ i}(ฮแต : Ctxแต ฮ) โ Tyแต ฮแต i A โ Tm ฮ A โ Set
Tmแต ฮแต Aแต t = Tm (ctxแต ฮแต) ([ idS , [ wkแต ฮแต ]t t ] Aแต)

[_]แต_
  : {ฮแต : Ctxแต ฮ}{ฮแต : Ctxแต ฮ} 
  โ (ฯแต : Subแต ฮแต ฮแต ฯ)(Aแต : Tyแต ฮแต i A)
  โ Tyแต ฮแต i ([ ฯ ] A)
[_]แต_ {A = A} {ฮแต = ฮแต} {ฮแต} ฯแต Aแต =
  [ 
    tr (ฮป A' โ Sub (ctxแต ฮแต , A') (ctxแต ฮแต , [ wkแต ฮแต ] A))
       (cong ([_] A) (wkแตnat ฯแต)) -- two equalities on substitution composition are reduced here
       (subแต ฯแต โ [ wkแต ฮแต ] A)
  ] Aแต

โแถแต : Ctxแต โ
โแถแต = record
  { ctxแต = โ
  ; wkแต  = โ
  }

_,แถแต_
  : (ฮแต : Ctxแต ฮ)(Aแต : Tyแต ฮแต i A)
  โ Ctxแต (ฮ , A)
_,แถแต_ {A = A} ฮแต Aแต = record
  { ctxแต = (ctxแต ฮแต , [ wkแต ฮแต ] A) , Aแต
  ; wkแต  = wk โจ wkแต ฮแต โ A 
  }

โหขแต : {ฮแต : Ctxแต ฮ} โ Subแต ฮแต โแถแต โ
โหขแต = record
  { subแต   = โ
  ; wkแตnat = ฮทโ โ sym ฮทโ
  }

_,หขแต_
  : {ฮแต : Ctxแต ฮ}{ฮแต : Ctxแต ฮ}{Aแต : Tyแต ฮแต i A}
  โ (ฯแต : Subแต ฮแต ฮแต ฯ)(tแต : Tmแต ฮแต ([_]แต_ {A = A} ฯแต Aแต) t)
  โ Subแต ฮแต (ฮแต ,แถแต Aแต) (_,_ ฯ {A} t)
_,หขแต_ {A = A} {ฯ = ฯ} {t = t} {ฮแต = ฮแต} {ฮแต} {Aแต} ฯแต tแต = record
  { subแต   = (subแต ฯแต , tr (Tm _) (cong ([_] A) (sym $ wkแตnat ฯแต)) ([ wkแต ฮแต ]t t))
                      , tr (Tm _) {!   !} tแต
  ; wkแตnat = {!   !}
  }

idSแต : {ฮแต : Ctxแต ฮ} โ Subแต ฮแต ฮแต idS
idSแต {ฮแต = ฮแต} = record
  { subแต   = idS
  ; wkแตnat = (idSโจ wkแต ฮแต) โ (sym $ wkแต ฮแต โจidS)
  }

_โจแต_
  :{ฮแต : Ctxแต ฮ}{ฮแต : Ctxแต ฮ}{ฮแต : Ctxแต ฮ}
  โ (ฯแต : Subแต ฮแต ฮแต ฯ)(ฯแต : Subแต ฮแต ฮแต ฯ)
  โ Subแต ฮแต ฮแต (ฯ โจ ฯ)
_โจแต_ {ฯ = ฯ} ฯแต ฯแต = record
  { subแต   = subแต ฯแต โจ subแต ฯแต
  ; wkแตnat = sym โจ-assoc
           โ cong (subแต ฯแต โจ_) (wkแตnat ฯแต)
           โ โจ-assoc
           โ cong (_โจ ฯ) (wkแตnat ฯแต)
           โ sym โจ-assoc
  }

ฯโแต
  : {ฮแต : Ctxแต ฮ}{ฮแต : Ctxแต ฮ}{Aแต : Tyแต ฮแต i A}
  โ (ฯแต : Subแต ฮแต (_,แถแต_ {A = A} ฮแต Aแต) ฯ)
  โ Subแต ฮแต ฮแต (ฯโ ฯ)
ฯโแต {ฮแต = ฮแต} ฯแต = record
  { subแต   = ฯโ (ฯโ (subแต ฯแต))
  ; wkแตnat = {!   !}
  }

ฯโแต
  : {ฮแต : Ctxแต ฮ}{ฮแต : Ctxแต ฮ}{Aแต : Tyแต ฮแต i A}
  โ (ฯแต : Subแต ฮแต (_,แถแต_ {A = A} ฮแต Aแต) ฯ)
  โ Tmแต ฮแต ([_]แต_ {A = A} {ฮแต = ฮแต} (ฯโแต ฯแต) Aแต) (ฯโ ฯ)
ฯโแต ฯแต = tr (Tm _) {!   !} (ฯโ (subแต ฯแต))

[_]tmแต_
  : {ฮแต : Ctxแต ฮ}{ฮแต : Ctxแต ฮ}
  โ (ฯแต : Subแต ฮแต ฮแต ฯ){Aแต : Tyแต ฮแต i A}(tแต : Tmแต {A = A} ฮแต Aแต t)
  โ Tmแต ฮแต ([_]แต_ {A = A} ฯแต Aแต) ([ ฯ ]tm t)
[_]tmแต_ ฯแต tแต = tr (Tm _) {!   !} ([ subแต ฯแต ]tm tแต)

_โแต_
  : {ฮแต : Ctxแต ฮ}{ฮแต : Ctxแต ฮ}
  โ (ฯแต : Subแต ฮแต ฮแต ฯ)(Aแต : Tyแต ฮแต i A)
  โ Subแต (ฮแต ,แถแต ([_]แต_ {A = A} ฯแต Aแต)) (ฮแต ,แถแต Aแต) (ฯ โ A)
_โแต_ {A = A} {ฮแต = ฮแต} {ฮแต} ฯแต Aแต = record
  { subแต = tr (ฮป A' โ Sub (ctxแต ฮแต , A') (ctxแต ฮแต , [ wkแต ฮแต ] A))
              (cong ([_] A) (wkแตnat ฯแต)) -- two equalities on substitution composition are reduced here
              (subแต ฯแต โ [ wkแต ฮแต ] A)
           โ Aแต
  ; wkแตnat = {!   !}
  }

[_]tแต_
  : {ฮแต : Ctxแต ฮ}{ฮแต : Ctxแต ฮ}{Aแต : Tyแต ฮแต i A}
  โ (ฯแต : Subแต ฮแต ฮแต ฯ)(tแต : Tmแต {A = A} ฮแต Aแต t)
  โ Tmแต ฮแต ([_]แต_ {A = A} ฯแต Aแต) ([ ฯ ]t t)
[_]tแต_ ฯแต tแต = tr (Tm _) {!   !} ([ subแต ฯแต ]t tแต)

Uแต
  : {ฮแต : Ctxแต ฮ}(i : โ)
  โ Tyแต ฮแต (suc i) (U i)
Uแต i = U i -- transports are reduced here

Elแต
  : {ฮแต : Ctxแต ฮ}
  โ Tmแต ฮแต (Uแต {ฮแต = ฮแต} i) u
  โ Tyแต ฮแต i (El u)
Elแต {ฮแต = ฮแต} uแต = El ([ wk ]t uแต) -- transports are reduced here

logpred : Eliminator
logpred .mot = record
  { Ctxแดน = Ctxแต
  ; Tyแดน  = Tyแต
  ; Subแดน = Subแต
  ; Tmแดน  = Tmแต
  }
logpred .met = record
  { ๐ = record
    { [_]แดน_   = [_]แต_
    ; โแถแดน     = โแถแต
    ; _,แถแดน_   = _,แถแต_
    ; โหขแดน     = โหขแต
    ; _,หขแดน_   = _,หขแต_
    ; idSแดน    = idSแต
    ; _โจแดน_    = _โจแต_
    ; ฯโแดน     = ฯโแต
    ; ฯโแดน     = ฯโแต
    ; [_]tmแดน_ = [_]tmแต_
    ; _โแดน_    = _โแต_
    ; [_]tแดน_  = [_]tแต_
    }
  ; univ = record
    { Uแดน = Uแต
    ; Elแดน = Elแต
    }
  }                    